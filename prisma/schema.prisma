generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  image         String?
  createdAt     DateTime      @default(now())
  plan          Plan          @default(FREE)
  usageCount    Int           @default(0)
  isSubscribed  Boolean       @default(false)
  emailVerified DateTime?
  lastChatAt    DateTime?
  lastSeenAt    DateTime?
  accounts      Account[]
  chatSessions  ChatSession[]
  feedbacks     Feedback[]
  messages      Message[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ChatSession {
  id        String    @id @default(cuid())
  userId    String
  title     String?
  createdAt DateTime  @default(now())
  answer    String?
  summary   Json?
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
}

model Message {
  id        String      @id @default(cuid())
  sessionId String
  userId    String
  role      Role
  content   String
  createdAt DateTime    @default(now())
  fileUrl   String?
  answer    String?
  session   ChatSession @relation(fields: [sessionId], references: [id])
  user      User        @relation(fields: [userId], references: [id])
}

model Feedback {
  id        String   @id @default(cuid())
  userId    String
  message   String
  rating    Int?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  user
  assistant
  system
}

enum Plan {
  FREE
  PRO
  ENTERPRISE
}
